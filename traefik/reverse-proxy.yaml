apiVersion: v1
kind: Service
metadata:
  name: traefik

spec:
  ports:
    - protocol: TCP
      name: web
      port: 80
    - protocol: TCP
      name: websecure
      port: 443
  selector:
    app: traefik
  type: LoadBalancer

---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default
  name: traefik-ingress-controller

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: certs
spec:
  resources:
    requests:
      storage: 5Gi
  accessModes:
    - ReadWriteOnce


---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: default
  name: traefik
  labels: { app: traefik }
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels: { app: traefik }
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:v2.4.0
          args:
            - --accesslog
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --providers.kubernetescrd
            - --certificatesresolvers.default.acme.tlschallenge=true
            - --certificatesresolvers.default.acme.email=devops@owkin.com
            - --certificatesresolvers.default.acme.storage=/certs/acme.json
            # Decomment this line to switch to the staging LE server
            #- --certificatesresolvers.default.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
          volumeMounts:
          - mountPath: /certs
            name: certs-claim
      volumes:
      - name: certs-claim
        persistentVolumeClaim:
          claimName: certs
          
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: http-catchall
  namespace: default
spec:
  entryPoints:
    - web
  routes:
    - match: HostRegexp(`{any:.+}`)
      kind: Rule
      services:
        # any service in the namespace
        # the service will be never called
        - name: traefik
          port: 80
      middlewares:
        - name: https-redirect
          # if the Middleware has distinct namespace
          namespace: default

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware 
metadata:
  name: https-redirect
  namespace: default
spec:
  redirectScheme:
    scheme: https
    permanent: true

---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSOption
metadata:
  name: mytlsoption
  namespace: default
spec:
  minVersion: VersionTLS12
  cipherSuites:
    - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
    - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
    - TLS_AES_256_GCM_SHA384
    - TLS_CHACHA20_POLY1305_SHA256
  sniStrict: true
  